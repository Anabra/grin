
grinMain =
  k0 <- pure 0
  a0 <- pure (CInt k0)
  a1 <- pure (CInt k0)
  a2 <- pure (CInt k0)
  p0 <- store a0
  p1 <- store a1
  p2 <- store a2
  foo3 <- pure (P3foo)
  pfoo3 <- store foo3
  foo3ap <- pure (Fap pfoo3 p0)
  pfoo3ap <- store foo3ap
  foo2 <- eval $ pfoo3ap
  pfoo2 <- store foo2
  foo2ap <- pure (Fap pfoo2 p1)
  pfoo2ap <- store foo2ap
  foo1 <- eval $ pfoo2ap
  pfoo1 <- store foo1
  foo1ap <- pure (Fap pfoo1 p2)
  pfoo1ap <- store foo1ap
  fooRet <- eval $ pfoo1ap
  pure fooRet

foo x0 y0 z0 =
  y0' <- eval $ y0
  pure y0'

apply pf cur =
  case pf of
    (P3foo) @ alt1 ->
      n0 <- pure (P2foo cur)
      pure n0
    (P2foo v0) @ alt2 ->
      n1 <- pure (P1foo v0 cur)
      pure n1
    (P1foo v1 v2) @ alt3 ->
      n2 <- foo $ v1 v2 cur
      pure n2

ap f x =
  f' <- eval $ f
  apply $ f' x

eval p =
  v <- fetch p
  case v of
    (CInt n) @ alt4 ->
      pure v
    (P3foo) @ alt5 ->
      pure v
    (P2foo v3) @ alt6 ->
      pure v
    (P1foo v4 v5) @ alt7 ->
      pure v
    (Ffoo.0) @ alt8 ->
      b2 <- pure (#undefined :: T_Dead)
      b1 <- pure (#undefined :: T_Dead)
      b0 <- pure (#undefined :: T_Dead)
      w0 <- foo $ b0 b1 b2
      _1 <- update p w0
      pure w0
    (Fapply.0) @ alt9 ->
      y <- pure (#undefined :: T_Dead)
      g <- pure (#undefined :: T_Dead)
      w1 <- apply $ g y
      _2 <- update p w1
      pure w1
    (Fap h z) @ alt10 ->
      w2 <- ap $ h z
      _3 <- update p w2
      pure w2
