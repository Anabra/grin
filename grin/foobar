ffi effectful
  _prim_int_print :: T_Int64
                  -> T_Unit

primop pure
  _prim_int_add :: T_Int64
                -> T_Int64
                -> T_Int64
  _prim_int_gt :: T_Int64
               -> T_Int64
               -> T_Bool

grinMain =
  y.0 <- pure 1
  v.0 <- pure (CInt y.0)
  t1 <- store v.0
  y.1 <- pure 10000
  v.1 <- pure (CInt y.1)
  t2 <- store v.1
  v.2 <- pure (Fupto t1 t2)
  t3 <- store v.2
  unboxed.CInt.2 <- sum.unboxed $ t3
  _prim_int_print $ unboxed.CInt.2

sum.unboxed l =
  v.13 <- fetch l
  l2 <- case v.13 of
    (Fupto a.3 b.3) @ alt.4.3 ->
      v.11.0 <- fetch a.3
      (CInt m'.0) @ p.2.0 <- pure v.11.0
      v.12.0 <- fetch b.3
      (CInt n'.0) @ p.1.0 <- pure v.12.0
      b'.0 <- _prim_int_gt $ m'.0 n'.0
      w.3 <- case b'.0 of
        #True @ alt.0.0 ->
          v.4.0 <- pure (CNil)
          pure v.4.0
        #False @ alt.1.0 ->
          x.7.0 <- pure 1
          m1'.0 <- _prim_int_add $ m'.0 x.7.0
          v.5.0 <- pure (CInt m1'.0)
          m1.0 <- store v.5.0
          v.6.0 <- pure (Fupto m1.0 b.3)
          p.5 <- store v.6.0
          v.7.0 <- pure (CCons a.3 p.5)
          pure v.7.0
      p.5.3 <- update l w.3
      pure w.3
    #default @ alt.6.3 ->
      pure alt.6.3
  case l2 of
    (CNil) @ alt.2 ->
      y.10 <- pure 0
      pure y.10
    (CCons x xs) @ alt.3 ->
      v.14 <- fetch x
      (CInt x') @ p.4 <- pure v.14
      unboxed.CInt.3 <- sum.unboxed $ xs
      ax' <- _prim_int_add $ x' unboxed.CInt.3
      pure ax'
