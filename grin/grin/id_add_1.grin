grinMain =
  zero <- store (CInt 0)
  one  <- store (CInt 1)

  add_1 <- store (P1_add one)
  thunk <- store (Fid add_1)

  id_add_1 <- eval thunk
  r <- apply id_add_1 zero

  (CInt r) <- pure r
  _prim_int_print r

id q =
  q' <- eval q
  pure q'

add x y =
  (CInt x') <- eval x
  (CInt y') <- eval y
  r <- _prim_int_add x' y'
  pure (CInt r)

add_one =
  one <- store (CInt 1)
  pure (P1_add one)

eval p =
  v <- fetch p
  case v of
    (CInt _n) -> pure v
    (P2_add) -> pure v
    (P1_add _x) -> pure v
    (Fid x.0) ->
      r.id <- id x.0
      update p r.id
      pure r.id
    (Fadd x.1 y.1) ->
      r.add <- add x.1 y.1
      update p r.add
      pure r.add

apply f u =
  case f of
    (P2_add) ->
      pure (P1_add u)
    (P1_add z) -> add z u
